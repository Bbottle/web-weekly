{"version":3,"sources":["index.min.js"],"names":["Headers","headers","this","map","self","forEach","name","values","value","append","Object","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","TypeError","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","Body","support","_initBody","_bodyInit","_bodyText","Blob","prototype","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","Error","rejected","arrayBuffer","then","text","decode","json","JSON","parse","normalizeMethod","method","upcased","toUpperCase","methods","indexOf","Request","url","options","credentials","mode","referrer","form","trim","split","bytes","shift","replace","join","decodeURIComponent","xhr","head","pairs","getAllResponseHeaders","header","key","Response","bodyInit","type","status","statusText","fetch","toLowerCase","list","push","get","getAll","has","hasOwnProperty","set","callback","e","responseURL","test","getResponseHeader","XMLHttpRequest","withCredentials","response","responseText","open","responseType","setRequestHeader","send","call","polyfill","$$utils$$objectOrFunction","x","$$utils$$isFunction","$$utils$$isMaybeThenable","$$utils$$F","$$asap$$useNextTick","process","nextTick","$$asap$$flush","$$asap$$useMutationObserver","iterations","observer","$$asap$$BrowserMutationObserver","node","document","createTextNode","observe","characterData","data","$$asap$$useMessageChannel","channel","MessageChannel","port1","onmessage","port2","postMessage","$$asap$$useSetTimeout","setTimeout","i","$$asap$$len","$$asap$$queue","arg","undefined","$$$internal$$noop","$$$internal$$selfFullfillment","$$$internal$$cannotReturnOwn","$$$internal$$getThen","promise","$$$internal$$GET_THEN_ERROR","$$$internal$$tryThen","fulfillmentHandler","rejectionHandler","$$$internal$$handleForeignThenable","thenable","$$asap$$default","sealed","$$$internal$$resolve","$$$internal$$fulfill","reason","$$$internal$$reject","_label","$$$internal$$handleOwnThenable","_state","$$$internal$$FULFILLED","_result","$$$internal$$REJECTED","$$$internal$$subscribe","$$$internal$$handleMaybeThenable","maybeThenable","constructor","$$$internal$$publishRejection","_onerror","$$$internal$$publish","$$$internal$$PENDING","_subscribers","length","parent","child","onFulfillment","onRejection","subscribers","settled","detail","$$$internal$$invokeCallback","$$$internal$$ErrorObject","$$$internal$$tryCatch","$$$internal$$TRY_CATCH_ERROR","succeeded","failed","hasCallback","$$$internal$$initializePromise","resolver","$$$enumerator$$Enumerator","Constructor","input","abortOnReject","label","_instanceConstructor","_abortOnReject","_validateInput","_input","_remaining","_init","_enumerate","_validationError","$$es6$promise$promise$$needsResolver","$$es6$promise$promise$$needsNew","$$es6$promise$promise$$Promise","_id","$$es6$promise$promise$$counter","$$utils$$_isArray","Array","isArray","toString","$$asap$$scheduleFlush","$$utils$$isArray","Date","now","getTime","create","o","arguments","$$asap$$browserGlobal","window","MutationObserver","WebKitMutationObserver","$$asap$$isWorker","Uint8ClampedArray","importScripts","$$$enumerator$$default","_eachEntry","entry","c","_settledAt","_willSettleAt","_makeResult","state","enumerator","$$promise$all$$default","entries","$$promise$race$$default","$$promise$resolve$$default","object","$$promise$reject$$default","$$es6$promise$promise$$default","all","race","catch","$$es6$promise$polyfill$$default","local","global","es6PromiseSupport","r","es6$promise$umd$$ES6Promise","define","module"],"mappings":"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","file":"index.min.js","sourcesContent":["(function() {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    var self = this\n    if (headers instanceof Headers) {\n      headers.forEach(function(name, values) {\n        values.forEach(function(value) {\n          self.append(name, value)\n        })\n      })\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        self.append(name, headers[name])\n      })\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = name.toLowerCase()\n    var list = this.map[name]\n    if (!list) {\n      list = []\n      this.map[name] = list\n    }\n    list.push(value)\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[name.toLowerCase()]\n  }\n\n  Headers.prototype.get = function(name) {\n    var values = this.map[name.toLowerCase()]\n    return values ? values[0] : null\n  }\n\n  Headers.prototype.getAll = function(name) {\n    return this.map[name.toLowerCase()] || []\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(name.toLowerCase())\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[name.toLowerCase()] = [value]\n  }\n\n  // Instead of iterable for now.\n  Headers.prototype.forEach = function(callback) {\n    var self = this\n    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n      callback(name, self.map[name])\n    })\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    reader.readAsArrayBuffer(blob)\n    return fileReaderReady(reader)\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    reader.readAsText(blob)\n    return fileReaderReady(reader)\n  }\n\n  var support = {\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob();\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    if (support.blob) {\n      this._initBody = function(body) {\n        this._bodyInit = body\n        if (typeof body === 'string') {\n          this._bodyText = body\n        } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n          this._bodyBlob = body\n        } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n          this._bodyFormData = body\n        } else if (!body) {\n          this._bodyText = ''\n        } else {\n          throw new Error('unsupported BodyInit type')\n        }\n      }\n\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n\n      this.text = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return readBlobAsText(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as text')\n        } else {\n          return Promise.resolve(this._bodyText)\n        }\n      }\n    } else {\n      this._initBody = function(body) {\n        this._bodyInit = body\n        if (typeof body === 'string') {\n          this._bodyText = body\n        } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n          this._bodyFormData = body\n        } else if (!body) {\n          this._bodyText = ''\n        } else {\n          throw new Error('unsupported BodyInit type')\n        }\n      }\n\n      this.text = function() {\n        var rejected = consumed(this)\n        return rejected ? rejected : Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(url, options) {\n    options = options || {}\n    this.url = url\n\n    this.credentials = options.credentials || 'omit'\n    this.headers = new Headers(options.headers)\n    this.method = normalizeMethod(options.method || 'GET')\n    this.mode = options.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && options.body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(options.body)\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function headers(xhr) {\n    var head = new Headers()\n    var pairs = xhr.getAllResponseHeaders().trim().split('\\n')\n    pairs.forEach(function(header) {\n      var split = header.trim().split(':')\n      var key = split.shift().trim()\n      var value = split.join(':').trim()\n      head.append(key, value)\n    })\n    return head\n  }\n\n  Request.prototype.fetch = function() {\n    var self = this\n\n    return new Promise(function(resolve, reject) {\n      var xhr = new XMLHttpRequest()\n      if (self.credentials === 'cors') {\n        xhr.withCredentials = true;\n      }\n\n      function responseURL() {\n        if ('responseURL' in xhr) {\n          return xhr.responseURL\n        }\n\n        // Avoid security warnings on getResponseHeader when not allowed by CORS\n        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n          return xhr.getResponseHeader('X-Request-URL')\n        }\n\n        return;\n      }\n\n      xhr.onload = function() {\n        var status = (xhr.status === 1223) ? 204 : xhr.status\n        if (status < 100 || status > 599) {\n          reject(new TypeError('Network request failed'))\n          return\n        }\n        var options = {\n          status: status,\n          statusText: xhr.statusText,\n          headers: headers(xhr),\n          url: responseURL()\n        }\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(self.method, self.url, true)\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      self.headers.forEach(function(name, values) {\n        values.forEach(function(value) {\n          xhr.setRequestHeader(name, value)\n        })\n      })\n\n      xhr.send(typeof self._bodyInit === 'undefined' ? null : self._bodyInit)\n    })\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this._initBody(bodyInit)\n    this.type = 'default'\n    this.url = null\n    this.status = options.status\n    this.statusText = options.statusText\n    this.headers = options.headers\n    this.url = options.url || ''\n  }\n\n  Body.call(Response.prototype)\n\n  self.Headers = Headers;\n  self.Request = Request;\n  self.Response = Response;\n\n  self.fetch = function (url, options) {\n    return new Request(url, options).fetch()\n  }\n  self.fetch.polyfill = true\n})();\n\n/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/jakearchibald/es6-promise/master/LICENSE\n * @version   2.0.0\n */\n\n(function() {\n    \"use strict\";\n\n    function $$utils$$objectOrFunction(x) {\n      return typeof x === 'function' || (typeof x === 'object' && x !== null);\n    }\n\n    function $$utils$$isFunction(x) {\n      return typeof x === 'function';\n    }\n\n    function $$utils$$isMaybeThenable(x) {\n      return typeof x === 'object' && x !== null;\n    }\n\n    var $$utils$$_isArray;\n\n    if (!Array.isArray) {\n      $$utils$$_isArray = function (x) {\n        return Object.prototype.toString.call(x) === '[object Array]';\n      };\n    } else {\n      $$utils$$_isArray = Array.isArray;\n    }\n\n    var $$utils$$isArray = $$utils$$_isArray;\n    var $$utils$$now = Date.now || function() { return new Date().getTime(); };\n    function $$utils$$F() { }\n\n    var $$utils$$o_create = (Object.create || function (o) {\n      if (arguments.length > 1) {\n        throw new Error('Second argument not supported');\n      }\n      if (typeof o !== 'object') {\n        throw new TypeError('Argument must be an object');\n      }\n      $$utils$$F.prototype = o;\n      return new $$utils$$F();\n    });\n\n    var $$asap$$len = 0;\n\n    var $$asap$$default = function asap(callback, arg) {\n      $$asap$$queue[$$asap$$len] = callback;\n      $$asap$$queue[$$asap$$len + 1] = arg;\n      $$asap$$len += 2;\n      if ($$asap$$len === 2) {\n        // If len is 1, that means that we need to schedule an async flush.\n        // If additional callbacks are queued before the queue is flushed, they\n        // will be processed by this flush that we are scheduling.\n        $$asap$$scheduleFlush();\n      }\n    };\n\n    var $$asap$$browserGlobal = (typeof window !== 'undefined') ? window : {};\n    var $$asap$$BrowserMutationObserver = $$asap$$browserGlobal.MutationObserver || $$asap$$browserGlobal.WebKitMutationObserver;\n\n    // test for web worker but not in IE10\n    var $$asap$$isWorker = typeof Uint8ClampedArray !== 'undefined' &&\n      typeof importScripts !== 'undefined' &&\n      typeof MessageChannel !== 'undefined';\n\n    // node\n    function $$asap$$useNextTick() {\n      return function() {\n        process.nextTick($$asap$$flush);\n      };\n    }\n\n    function $$asap$$useMutationObserver() {\n      var iterations = 0;\n      var observer = new $$asap$$BrowserMutationObserver($$asap$$flush);\n      var node = document.createTextNode('');\n      observer.observe(node, { characterData: true });\n\n      return function() {\n        node.data = (iterations = ++iterations % 2);\n      };\n    }\n\n    // web worker\n    function $$asap$$useMessageChannel() {\n      var channel = new MessageChannel();\n      channel.port1.onmessage = $$asap$$flush;\n      return function () {\n        channel.port2.postMessage(0);\n      };\n    }\n\n    function $$asap$$useSetTimeout() {\n      return function() {\n        setTimeout($$asap$$flush, 1);\n      };\n    }\n\n    var $$asap$$queue = new Array(1000);\n\n    function $$asap$$flush() {\n      for (var i = 0; i < $$asap$$len; i+=2) {\n        var callback = $$asap$$queue[i];\n        var arg = $$asap$$queue[i+1];\n\n        callback(arg);\n\n        $$asap$$queue[i] = undefined;\n        $$asap$$queue[i+1] = undefined;\n      }\n\n      $$asap$$len = 0;\n    }\n\n    var $$asap$$scheduleFlush;\n\n    // Decide what async method to use to triggering processing of queued callbacks:\n    if (typeof process !== 'undefined' && {}.toString.call(process) === '[object process]') {\n      $$asap$$scheduleFlush = $$asap$$useNextTick();\n    } else if ($$asap$$BrowserMutationObserver) {\n      $$asap$$scheduleFlush = $$asap$$useMutationObserver();\n    } else if ($$asap$$isWorker) {\n      $$asap$$scheduleFlush = $$asap$$useMessageChannel();\n    } else {\n      $$asap$$scheduleFlush = $$asap$$useSetTimeout();\n    }\n\n    function $$$internal$$noop() {}\n    var $$$internal$$PENDING   = void 0;\n    var $$$internal$$FULFILLED = 1;\n    var $$$internal$$REJECTED  = 2;\n    var $$$internal$$GET_THEN_ERROR = new $$$internal$$ErrorObject();\n\n    function $$$internal$$selfFullfillment() {\n      return new TypeError(\"You cannot resolve a promise with itself\");\n    }\n\n    function $$$internal$$cannotReturnOwn() {\n      return new TypeError('A promises callback cannot return that same promise.')\n    }\n\n    function $$$internal$$getThen(promise) {\n      try {\n        return promise.then;\n      } catch(error) {\n        $$$internal$$GET_THEN_ERROR.error = error;\n        return $$$internal$$GET_THEN_ERROR;\n      }\n    }\n\n    function $$$internal$$tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n      try {\n        then.call(value, fulfillmentHandler, rejectionHandler);\n      } catch(e) {\n        return e;\n      }\n    }\n\n    function $$$internal$$handleForeignThenable(promise, thenable, then) {\n       $$asap$$default(function(promise) {\n        var sealed = false;\n        var error = $$$internal$$tryThen(then, thenable, function(value) {\n          if (sealed) { return; }\n          sealed = true;\n          if (thenable !== value) {\n            $$$internal$$resolve(promise, value);\n          } else {\n            $$$internal$$fulfill(promise, value);\n          }\n        }, function(reason) {\n          if (sealed) { return; }\n          sealed = true;\n\n          $$$internal$$reject(promise, reason);\n        }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n        if (!sealed && error) {\n          sealed = true;\n          $$$internal$$reject(promise, error);\n        }\n      }, promise);\n    }\n\n    function $$$internal$$handleOwnThenable(promise, thenable) {\n      if (thenable._state === $$$internal$$FULFILLED) {\n        $$$internal$$fulfill(promise, thenable._result);\n      } else if (promise._state === $$$internal$$REJECTED) {\n        $$$internal$$reject(promise, thenable._result);\n      } else {\n        $$$internal$$subscribe(thenable, undefined, function(value) {\n          $$$internal$$resolve(promise, value);\n        }, function(reason) {\n          $$$internal$$reject(promise, reason);\n        });\n      }\n    }\n\n    function $$$internal$$handleMaybeThenable(promise, maybeThenable) {\n      if (maybeThenable.constructor === promise.constructor) {\n        $$$internal$$handleOwnThenable(promise, maybeThenable);\n      } else {\n        var then = $$$internal$$getThen(maybeThenable);\n\n        if (then === $$$internal$$GET_THEN_ERROR) {\n          $$$internal$$reject(promise, $$$internal$$GET_THEN_ERROR.error);\n        } else if (then === undefined) {\n          $$$internal$$fulfill(promise, maybeThenable);\n        } else if ($$utils$$isFunction(then)) {\n          $$$internal$$handleForeignThenable(promise, maybeThenable, then);\n        } else {\n          $$$internal$$fulfill(promise, maybeThenable);\n        }\n      }\n    }\n\n    function $$$internal$$resolve(promise, value) {\n      if (promise === value) {\n        $$$internal$$reject(promise, $$$internal$$selfFullfillment());\n      } else if ($$utils$$objectOrFunction(value)) {\n        $$$internal$$handleMaybeThenable(promise, value);\n      } else {\n        $$$internal$$fulfill(promise, value);\n      }\n    }\n\n    function $$$internal$$publishRejection(promise) {\n      if (promise._onerror) {\n        promise._onerror(promise._result);\n      }\n\n      $$$internal$$publish(promise);\n    }\n\n    function $$$internal$$fulfill(promise, value) {\n      if (promise._state !== $$$internal$$PENDING) { return; }\n\n      promise._result = value;\n      promise._state = $$$internal$$FULFILLED;\n\n      if (promise._subscribers.length === 0) {\n      } else {\n        $$asap$$default($$$internal$$publish, promise);\n      }\n    }\n\n    function $$$internal$$reject(promise, reason) {\n      if (promise._state !== $$$internal$$PENDING) { return; }\n      promise._state = $$$internal$$REJECTED;\n      promise._result = reason;\n\n      $$asap$$default($$$internal$$publishRejection, promise);\n    }\n\n    function $$$internal$$subscribe(parent, child, onFulfillment, onRejection) {\n      var subscribers = parent._subscribers;\n      var length = subscribers.length;\n\n      parent._onerror = null;\n\n      subscribers[length] = child;\n      subscribers[length + $$$internal$$FULFILLED] = onFulfillment;\n      subscribers[length + $$$internal$$REJECTED]  = onRejection;\n\n      if (length === 0 && parent._state) {\n        $$asap$$default($$$internal$$publish, parent);\n      }\n    }\n\n    function $$$internal$$publish(promise) {\n      var subscribers = promise._subscribers;\n      var settled = promise._state;\n\n      if (subscribers.length === 0) { return; }\n\n      var child, callback, detail = promise._result;\n\n      for (var i = 0; i < subscribers.length; i += 3) {\n        child = subscribers[i];\n        callback = subscribers[i + settled];\n\n        if (child) {\n          $$$internal$$invokeCallback(settled, child, callback, detail);\n        } else {\n          callback(detail);\n        }\n      }\n\n      promise._subscribers.length = 0;\n    }\n\n    function $$$internal$$ErrorObject() {\n      this.error = null;\n    }\n\n    var $$$internal$$TRY_CATCH_ERROR = new $$$internal$$ErrorObject();\n\n    function $$$internal$$tryCatch(callback, detail) {\n      try {\n        return callback(detail);\n      } catch(e) {\n        $$$internal$$TRY_CATCH_ERROR.error = e;\n        return $$$internal$$TRY_CATCH_ERROR;\n      }\n    }\n\n    function $$$internal$$invokeCallback(settled, promise, callback, detail) {\n      var hasCallback = $$utils$$isFunction(callback),\n          value, error, succeeded, failed;\n\n      if (hasCallback) {\n        value = $$$internal$$tryCatch(callback, detail);\n\n        if (value === $$$internal$$TRY_CATCH_ERROR) {\n          failed = true;\n          error = value.error;\n          value = null;\n        } else {\n          succeeded = true;\n        }\n\n        if (promise === value) {\n          $$$internal$$reject(promise, $$$internal$$cannotReturnOwn());\n          return;\n        }\n\n      } else {\n        value = detail;\n        succeeded = true;\n      }\n\n      if (promise._state !== $$$internal$$PENDING) {\n        // noop\n      } else if (hasCallback && succeeded) {\n        $$$internal$$resolve(promise, value);\n      } else if (failed) {\n        $$$internal$$reject(promise, error);\n      } else if (settled === $$$internal$$FULFILLED) {\n        $$$internal$$fulfill(promise, value);\n      } else if (settled === $$$internal$$REJECTED) {\n        $$$internal$$reject(promise, value);\n      }\n    }\n\n    function $$$internal$$initializePromise(promise, resolver) {\n      try {\n        resolver(function resolvePromise(value){\n          $$$internal$$resolve(promise, value);\n        }, function rejectPromise(reason) {\n          $$$internal$$reject(promise, reason);\n        });\n      } catch(e) {\n        $$$internal$$reject(promise, e);\n      }\n    }\n\n    function $$$enumerator$$makeSettledResult(state, position, value) {\n      if (state === $$$internal$$FULFILLED) {\n        return {\n          state: 'fulfilled',\n          value: value\n        };\n      } else {\n        return {\n          state: 'rejected',\n          reason: value\n        };\n      }\n    }\n\n    function $$$enumerator$$Enumerator(Constructor, input, abortOnReject, label) {\n      this._instanceConstructor = Constructor;\n      this.promise = new Constructor($$$internal$$noop, label);\n      this._abortOnReject = abortOnReject;\n\n      if (this._validateInput(input)) {\n        this._input     = input;\n        this.length     = input.length;\n        this._remaining = input.length;\n\n        this._init();\n\n        if (this.length === 0) {\n          $$$internal$$fulfill(this.promise, this._result);\n        } else {\n          this.length = this.length || 0;\n          this._enumerate();\n          if (this._remaining === 0) {\n            $$$internal$$fulfill(this.promise, this._result);\n          }\n        }\n      } else {\n        $$$internal$$reject(this.promise, this._validationError());\n      }\n    }\n\n    $$$enumerator$$Enumerator.prototype._validateInput = function(input) {\n      return $$utils$$isArray(input);\n    };\n\n    $$$enumerator$$Enumerator.prototype._validationError = function() {\n      return new Error('Array Methods must be provided an Array');\n    };\n\n    $$$enumerator$$Enumerator.prototype._init = function() {\n      this._result = new Array(this.length);\n    };\n\n    var $$$enumerator$$default = $$$enumerator$$Enumerator;\n\n    $$$enumerator$$Enumerator.prototype._enumerate = function() {\n      var length  = this.length;\n      var promise = this.promise;\n      var input   = this._input;\n\n      for (var i = 0; promise._state === $$$internal$$PENDING && i < length; i++) {\n        this._eachEntry(input[i], i);\n      }\n    };\n\n    $$$enumerator$$Enumerator.prototype._eachEntry = function(entry, i) {\n      var c = this._instanceConstructor;\n      if ($$utils$$isMaybeThenable(entry)) {\n        if (entry.constructor === c && entry._state !== $$$internal$$PENDING) {\n          entry._onerror = null;\n          this._settledAt(entry._state, i, entry._result);\n        } else {\n          this._willSettleAt(c.resolve(entry), i);\n        }\n      } else {\n        this._remaining--;\n        this._result[i] = this._makeResult($$$internal$$FULFILLED, i, entry);\n      }\n    };\n\n    $$$enumerator$$Enumerator.prototype._settledAt = function(state, i, value) {\n      var promise = this.promise;\n\n      if (promise._state === $$$internal$$PENDING) {\n        this._remaining--;\n\n        if (this._abortOnReject && state === $$$internal$$REJECTED) {\n          $$$internal$$reject(promise, value);\n        } else {\n          this._result[i] = this._makeResult(state, i, value);\n        }\n      }\n\n      if (this._remaining === 0) {\n        $$$internal$$fulfill(promise, this._result);\n      }\n    };\n\n    $$$enumerator$$Enumerator.prototype._makeResult = function(state, i, value) {\n      return value;\n    };\n\n    $$$enumerator$$Enumerator.prototype._willSettleAt = function(promise, i) {\n      var enumerator = this;\n\n      $$$internal$$subscribe(promise, undefined, function(value) {\n        enumerator._settledAt($$$internal$$FULFILLED, i, value);\n      }, function(reason) {\n        enumerator._settledAt($$$internal$$REJECTED, i, reason);\n      });\n    };\n\n    var $$promise$all$$default = function all(entries, label) {\n      return new $$$enumerator$$default(this, entries, true /* abort on reject */, label).promise;\n    };\n\n    var $$promise$race$$default = function race(entries, label) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      var promise = new Constructor($$$internal$$noop, label);\n\n      if (!$$utils$$isArray(entries)) {\n        $$$internal$$reject(promise, new TypeError('You must pass an array to race.'));\n        return promise;\n      }\n\n      var length = entries.length;\n\n      function onFulfillment(value) {\n        $$$internal$$resolve(promise, value);\n      }\n\n      function onRejection(reason) {\n        $$$internal$$reject(promise, reason);\n      }\n\n      for (var i = 0; promise._state === $$$internal$$PENDING && i < length; i++) {\n        $$$internal$$subscribe(Constructor.resolve(entries[i]), undefined, onFulfillment, onRejection);\n      }\n\n      return promise;\n    };\n\n    var $$promise$resolve$$default = function resolve(object, label) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      if (object && typeof object === 'object' && object.constructor === Constructor) {\n        return object;\n      }\n\n      var promise = new Constructor($$$internal$$noop, label);\n      $$$internal$$resolve(promise, object);\n      return promise;\n    };\n\n    var $$promise$reject$$default = function reject(reason, label) {\n      /*jshint validthis:true */\n      var Constructor = this;\n      var promise = new Constructor($$$internal$$noop, label);\n      $$$internal$$reject(promise, reason);\n      return promise;\n    };\n\n    var $$es6$promise$promise$$counter = 0;\n\n    function $$es6$promise$promise$$needsResolver() {\n      throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n    }\n\n    function $$es6$promise$promise$$needsNew() {\n      throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n    }\n\n    var $$es6$promise$promise$$default = $$es6$promise$promise$$Promise;\n\n    /**\n      Promise objects represent the eventual result of an asynchronous operation. The\n      primary way of interacting with a promise is through its `then` method, which\n      registers callbacks to receive either a promise’s eventual value or the reason\n      why the promise cannot be fulfilled.\n\n      Terminology\n      -----------\n\n      - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n      - `thenable` is an object or function that defines a `then` method.\n      - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n      - `exception` is a value that is thrown using the throw statement.\n      - `reason` is a value that indicates why a promise was rejected.\n      - `settled` the final resting state of a promise, fulfilled or rejected.\n\n      A promise can be in one of three states: pending, fulfilled, or rejected.\n\n      Promises that are fulfilled have a fulfillment value and are in the fulfilled\n      state.  Promises that are rejected have a rejection reason and are in the\n      rejected state.  A fulfillment value is never a thenable.\n\n      Promises can also be said to *resolve* a value.  If this value is also a\n      promise, then the original promise's settled state will match the value's\n      settled state.  So a promise that *resolves* a promise that rejects will\n      itself reject, and a promise that *resolves* a promise that fulfills will\n      itself fulfill.\n\n\n      Basic Usage:\n      ------------\n\n      ```js\n      var promise = new Promise(function(resolve, reject) {\n        // on success\n        resolve(value);\n\n        // on failure\n        reject(reason);\n      });\n\n      promise.then(function(value) {\n        // on fulfillment\n      }, function(reason) {\n        // on rejection\n      });\n      ```\n\n      Advanced Usage:\n      ---------------\n\n      Promises shine when abstracting away asynchronous interactions such as\n      `XMLHttpRequest`s.\n\n      ```js\n      function getJSON(url) {\n        return new Promise(function(resolve, reject){\n          var xhr = new XMLHttpRequest();\n\n          xhr.open('GET', url);\n          xhr.onreadystatechange = handler;\n          xhr.responseType = 'json';\n          xhr.setRequestHeader('Accept', 'application/json');\n          xhr.send();\n\n          function handler() {\n            if (this.readyState === this.DONE) {\n              if (this.status === 200) {\n                resolve(this.response);\n              } else {\n                reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n              }\n            }\n          };\n        });\n      }\n\n      getJSON('/posts.json').then(function(json) {\n        // on fulfillment\n      }, function(reason) {\n        // on rejection\n      });\n      ```\n\n      Unlike callbacks, promises are great composable primitives.\n\n      ```js\n      Promise.all([\n        getJSON('/posts'),\n        getJSON('/comments')\n      ]).then(function(values){\n        values[0] // => postsJSON\n        values[1] // => commentsJSON\n\n        return values;\n      });\n      ```\n\n      @class Promise\n      @param {function} resolver\n      Useful for tooling.\n      @constructor\n    */\n    function $$es6$promise$promise$$Promise(resolver) {\n      this._id = $$es6$promise$promise$$counter++;\n      this._state = undefined;\n      this._result = undefined;\n      this._subscribers = [];\n\n      if ($$$internal$$noop !== resolver) {\n        if (!$$utils$$isFunction(resolver)) {\n          $$es6$promise$promise$$needsResolver();\n        }\n\n        if (!(this instanceof $$es6$promise$promise$$Promise)) {\n          $$es6$promise$promise$$needsNew();\n        }\n\n        $$$internal$$initializePromise(this, resolver);\n      }\n    }\n\n    $$es6$promise$promise$$Promise.all = $$promise$all$$default;\n    $$es6$promise$promise$$Promise.race = $$promise$race$$default;\n    $$es6$promise$promise$$Promise.resolve = $$promise$resolve$$default;\n    $$es6$promise$promise$$Promise.reject = $$promise$reject$$default;\n\n    $$es6$promise$promise$$Promise.prototype = {\n      constructor: $$es6$promise$promise$$Promise,\n\n    /**\n      The primary way of interacting with a promise is through its `then` method,\n      which registers callbacks to receive either a promise's eventual value or the\n      reason why the promise cannot be fulfilled.\n\n      ```js\n      findUser().then(function(user){\n        // user is available\n      }, function(reason){\n        // user is unavailable, and you are given the reason why\n      });\n      ```\n\n      Chaining\n      --------\n\n      The return value of `then` is itself a promise.  This second, 'downstream'\n      promise is resolved with the return value of the first promise's fulfillment\n      or rejection handler, or rejected if the handler throws an exception.\n\n      ```js\n      findUser().then(function (user) {\n        return user.name;\n      }, function (reason) {\n        return 'default name';\n      }).then(function (userName) {\n        // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n        // will be `'default name'`\n      });\n\n      findUser().then(function (user) {\n        throw new Error('Found user, but still unhappy');\n      }, function (reason) {\n        throw new Error('`findUser` rejected and we're unhappy');\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n        // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n      });\n      ```\n      If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n\n      ```js\n      findUser().then(function (user) {\n        throw new PedagogicalException('Upstream error');\n      }).then(function (value) {\n        // never reached\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // The `PedgagocialException` is propagated all the way down to here\n      });\n      ```\n\n      Assimilation\n      ------------\n\n      Sometimes the value you want to propagate to a downstream promise can only be\n      retrieved asynchronously. This can be achieved by returning a promise in the\n      fulfillment or rejection handler. The downstream promise will then be pending\n      until the returned promise is settled. This is called *assimilation*.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // The user's comments are now available\n      });\n      ```\n\n      If the assimliated promise rejects, then the downstream promise will also reject.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // If `findCommentsByAuthor` fulfills, we'll have the value here\n      }, function (reason) {\n        // If `findCommentsByAuthor` rejects, we'll have the reason here\n      });\n      ```\n\n      Simple Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var result;\n\n      try {\n        result = findResult();\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n      findResult(function(result, err){\n        if (err) {\n          // failure\n        } else {\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findResult().then(function(result){\n        // success\n      }, function(reason){\n        // failure\n      });\n      ```\n\n      Advanced Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var author, books;\n\n      try {\n        author = findAuthor();\n        books  = findBooksByAuthor(author);\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n\n      function foundBooks(books) {\n\n      }\n\n      function failure(reason) {\n\n      }\n\n      findAuthor(function(author, err){\n        if (err) {\n          failure(err);\n          // failure\n        } else {\n          try {\n            findBoooksByAuthor(author, function(books, err) {\n              if (err) {\n                failure(err);\n              } else {\n                try {\n                  foundBooks(books);\n                } catch(reason) {\n                  failure(reason);\n                }\n              }\n            });\n          } catch(error) {\n            failure(err);\n          }\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findAuthor().\n        then(findBooksByAuthor).\n        then(function(books){\n          // found books\n      }).catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method then\n      @param {Function} onFulfilled\n      @param {Function} onRejected\n      Useful for tooling.\n      @return {Promise}\n    */\n      then: function(onFulfillment, onRejection) {\n        var parent = this;\n        var state = parent._state;\n\n        if (state === $$$internal$$FULFILLED && !onFulfillment || state === $$$internal$$REJECTED && !onRejection) {\n          return this;\n        }\n\n        var child = new this.constructor($$$internal$$noop);\n        var result = parent._result;\n\n        if (state) {\n          var callback = arguments[state - 1];\n          $$asap$$default(function(){\n            $$$internal$$invokeCallback(state, child, callback, result);\n          });\n        } else {\n          $$$internal$$subscribe(parent, child, onFulfillment, onRejection);\n        }\n\n        return child;\n      },\n\n    /**\n      `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n      as the catch block of a try/catch statement.\n\n      ```js\n      function findAuthor(){\n        throw new Error('couldn't find that author');\n      }\n\n      // synchronous\n      try {\n        findAuthor();\n      } catch(reason) {\n        // something went wrong\n      }\n\n      // async with promises\n      findAuthor().catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method catch\n      @param {Function} onRejection\n      Useful for tooling.\n      @return {Promise}\n    */\n      'catch': function(onRejection) {\n        return this.then(null, onRejection);\n      }\n    };\n\n    var $$es6$promise$polyfill$$default = function polyfill() {\n      var local;\n\n      if (typeof global !== 'undefined') {\n        local = global;\n      } else if (typeof window !== 'undefined' && window.document) {\n        local = window;\n      } else {\n        local = self;\n      }\n\n      var es6PromiseSupport =\n        \"Promise\" in local &&\n        // Some of these methods are missing from\n        // Firefox/Chrome experimental implementations\n        \"resolve\" in local.Promise &&\n        \"reject\" in local.Promise &&\n        \"all\" in local.Promise &&\n        \"race\" in local.Promise &&\n        // Older version of the spec had a resolver object\n        // as the arg rather than a function\n        (function() {\n          var resolve;\n          new local.Promise(function(r) { resolve = r; });\n          return $$utils$$isFunction(resolve);\n        }());\n\n      if (!es6PromiseSupport) {\n        local.Promise = $$es6$promise$promise$$default;\n      }\n    };\n\n    var es6$promise$umd$$ES6Promise = {\n      'Promise': $$es6$promise$promise$$default,\n      'polyfill': $$es6$promise$polyfill$$default\n    };\n\n    /* global define:true module:true window: true */\n    if (typeof define === 'function' && define['amd']) {\n      define(function() { return es6$promise$umd$$ES6Promise; });\n    } else if (typeof module !== 'undefined' && module['exports']) {\n      module['exports'] = es6$promise$umd$$ES6Promise;\n    } else if (typeof this !== 'undefined') {\n      this['ES6Promise'] = es6$promise$umd$$ES6Promise;\n    }\n}).call(this);"],"sourceRoot":"/source/"}